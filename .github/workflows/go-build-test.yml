# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install linux dependencies
      run: sudo apt install clamav clamav-base clamav-daemon -y && sudo service clamav-daemon start

    - name: Ping clamd.sock
      run: cat /etc/clamav/clamd.conf | grep Local
      shell: bash
      
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.20'
      
    - name: Build
      run: go build -v -o=example/example example/*.go

    - name: Wait for ClamD
      run: x=1;y=false;while [ $x -le 90 ]; do if [ "$(echo PING | nc -U /var/run/clamav/clamd.ctl)" == "PONG" ]; then exit 0; fi; sleep 5;x=$(($x + 1));done;exit 1
      shell: bash
      
    - name: Test
      run: go test -v ./...
